name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ github.workspace }}/android-sdk/build-tools/34.0.0:$PATH

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Clean previous buildozer cache
      run: rm -rf .buildozer

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip zip openjdk-17-jdk libffi-dev libssl-dev libsqlite3-dev zlib1g-dev
        python -m pip install --upgrade pip
        pip install buildozer cython
        
    - name: Ensure required base tools are installed
      run: |
        sudo apt-get update
        sudo apt-get install -y tar unzip curl
        echo "PATH=$PATH" >> $GITHUB_ENV
        

    - name: Set up Android SDK
      run: |
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
        curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip sdk.zip -d $ANDROID_SDK_ROOT/cmdline-tools/latest
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-34" "build-tools;34.0.0"

    - name: Build APK
      run: buildozer -v android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: employee-tracker-apk
        path: bin/*.apk
